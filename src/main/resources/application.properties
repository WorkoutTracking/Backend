# PRODUCTION
%prod.quarkus.http.port=8080
%prod.quarkus.http.host=192.168.2.171
# datasource
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=postgres
%prod.quarkus.datasource.password=
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/

%prod.quarkus.http.cors=true
%prod.quarkus.http.cors.origins=http://localhost:8081, https://workouttracking-wt.web.app, http://localhost:8484, https://i479397.luna.fhict.nl, http://192.168.2.171:8081
%prod.quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
%prod.quarkus.http.cors.methods=GET,POST,PUT,DELETE

# drop and create the database at startup (only use in development!!)
# %prod.quarkus.hibernate-orm.database.generation=drop-and-create
# %prod.quarkus.hibernate-orm.sql-load-script = import.sql

# OIDC Configuration
%prod.quarkus.oidc.auth-server-url=http://localhost:8484/realms/workouttracking
%prod.quarkus.oidc.client-id=backend-service
%prod.quarkus.oidc.credentials.secret=
%prod.quarkus.oidc.tls.verification=none



# DEVELOPMENT
%dev.quarkus.http.port=8080
%dev.quarkus.http.host=192.168.2.171

# datasource
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=${QUARKUS_DB_USERNAME}
%dev.quarkus.datasource.password=${QUARKUS_DB_PASSWORD}
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://192.168.2.171:5432/

%dev.quarkus.http.cors=true
%dev.quarkus.http.cors.origins=http://localhost:8081, https://workouttracking-wt.web.app, http://localhost:8484, https://i479397.luna.fhict.nl, http://192.168.2.171:8081
%dev.quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
%dev.quarkus.http.cors.methods=GET, POST, PUT, DELETE

# OIDC Configuration
%dev.quarkus.oidc.auth-server-url=http://192.168.2.171:8484/realms/workouttracking
%dev.quarkus.oidc.client-id=backend-service
%dev.quarkus.oidc.credentials.secret=${QUARKUS_KEYCLOAK_SECRET}
%dev.quarkus.oidc.tls.verification=none

# Enable Policy Enforcement
%dev.quarkus.keycloak.policy-enforcer.enable=true

# drop and create the database at startup (only use in development!!)
# %dev.quarkus.hibernate-orm.database.generation=drop-and-create
# %dev.quarkus.hibernate-orm.sql-load-script = import.sql

# logging enabled
%dev.quarkus.log.console.enable=true
%dev.quarkus.log.file.enable=false